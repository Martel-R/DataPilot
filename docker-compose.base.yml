version: '3.8'

# ==============================================================================
# ARQUIVO BASE
# Contém a configuração principal e comum para todos os ambientes.
# ==============================================================================

networks:
  datapilot-net:
    driver: bridge

volumes:
  minio_data:
  postgres_db_airflow:
  neo4j_data:

services:
  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - datapilot-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres_airflow:
    image: postgres:13
    container_name: postgres_airflow
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_db_airflow:/var/lib/postgresql/data
    networks:
      - datapilot-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-init:
    image: apache/airflow:2.8.1
    container_name: airflow_init
    depends_on:
      postgres_airflow:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres_airflow/${POSTGRES_DB}
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    command: >
      bash -c "
        airflow db init &&
        airflow users create --role Admin --username ${AIRFLOW_ADMIN_USER} --password ${AIRFLOW_ADMIN_PASSWORD} --email ${AIRFLOW_ADMIN_EMAIL} --firstname admin --lastname admin
      "
    networks:
      - datapilot-net

  airflow-webserver:
    image: apache/airflow:2.8.1
    container_name: airflow_webserver
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres_airflow/${POSTGRES_DB}
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    command: webserver
    networks:
      - datapilot-net

  airflow-scheduler:
    image: apache/airflow:2.8.1
    container_name: airflow_scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres_airflow/${POSTGRES_DB}
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    command: scheduler
    networks:
      - datapilot-net

  neo4j:
    image: neo4j:5-community
    container_name: neo4j
    environment:
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
    volumes:
      - neo4j_data:/data
    networks:
      - datapilot-net

  spark-master:
    image: bitnami/spark:3
    container_name: spark_master
    environment:
      - SPARK_MODE=${SPARK_MODE}
    volumes:
      - ./spark-apps:/opt/bitnami/spark/apps
    networks:
      - datapilot-net

  spark-worker:
    image: bitnami/spark:3
    container_name: spark_worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=${SPARK_MASTER_URL}
    volumes:
      - ./spark-apps:/opt/bitnami/spark/apps
    networks:
      - datapilot-net

  backend:
    container_name: backend_fastapi
    build:
      context: .
      dockerfile: Dockerfile.backend
    depends_on:
      - spark-master
      - neo4j
      - minio
    env_file:
      - .env
    networks:
      - datapilot-net